<UserControl x:Class="LPAC___Proyecto_II_frontend.Views.ProductoWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModel="clr-namespace:LPAC___Proyecto_II_frontend.ViewModel"
             xmlns:converters="clr-namespace:LPAC___Proyecto_II_frontend.Helpers"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="950">

    <UserControl.DataContext>
        <viewModel:ProductoViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0,0,0,3"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CaretBrush" Value="Black"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="32"/>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="8"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E0E0E0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#D0D0D0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D0D0D0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#C0C0C0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AccentButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#006BBF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#005A99"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DestructiveButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#D13438"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#D13438"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B2242F"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#9F1C29"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#e0e0e0"/>
            <Setter Property="VerticalGridLinesBrush" Value="#e0e0e0"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9f9f9"/>
            <Setter Property="RowHeight" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f0f0f0"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>

        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e0e0e0"/>
                    <Setter Property="Foreground" Value="#333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0" Padding="10" CornerRadius="5" Margin="0,0,0,10"
                BorderBrush="{Binding MensajeColor}" BorderThickness="1" Background="#4CAF50">
            <TextBlock Text="{Binding MensajeEstado}"
                       Foreground="White" HorizontalAlignment="Center"
                       FontWeight="SemiBold"
                       FontSize="15"/>
        </Border>

        <TextBlock Text="Gestión de Productos"
                   Grid.Row="1" HorizontalAlignment="Center"
                   FontSize="28" FontWeight="Bold" Margin="0,0,0,20"
                   Foreground="White"/>
        <Border Grid.Row="2" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="4" Padding="10" Margin="0,0,0,10" Background="White">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                    <Label Content="Buscar Producto:" VerticalAlignment="Center" Margin="0,0,8,0"/>
                    <TextBox Width="300" Text="{Binding TextoBusqueda, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="Buscar" Command="{Binding BuscarProductosCommand}"
                            Style="{StaticResource BaseButtonStyle}" Margin="12,0,0,0"/>
                </StackPanel>
            </Grid>
        </Border>

        <Border Grid.Row="3" BorderBrush="LightGray" BorderThickness="1" CornerRadius="5" Margin="0,0,0,20" Background="White">
            <DataGrid ItemsSource="{Binding ProductosEncontrados}"
                      SelectedItem="{Binding ProductoActual, Mode=TwoWay}"
                      AutoGenerateColumns="False" IsReadOnly="True"
                      SelectionMode="Single">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding idProducto}" Width="50"/>
                    <DataGridTextColumn Header="Nombre Producto" Binding="{Binding nombreProducto}" Width="2*"/>
                    <DataGridTextColumn Header="Precio" Binding="{Binding precio, StringFormat=C2}" Width="90"/>
                    <DataGridTextColumn Header="Categoría" Binding="{Binding codCategoria}" Width="100"/>
                    <DataGridTextColumn Header="Existencias" Binding="{Binding cantidadExistencias}" Width="90"/>
                    <DataGridTextColumn Header="Punto Reorden" Binding="{Binding puntoReorden}" Width="100"/>
                    <DataGridCheckBoxColumn Header="Aplica Impuesto" Binding="{Binding aplicaImpuesto}" Width="Auto"/>
                    <DataGridTextColumn Header="Talla" Binding="{Binding talla}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <Border Grid.Row="4" BorderBrush="LightGray" BorderThickness="1" CornerRadius="5" Padding="10" Background="White">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Content="Nombre:" Grid.Row="0" Grid.Column="0" Margin="5"/>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ProductoActual.nombreProducto, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>

                <Label Content="Precio:" Grid.Row="1" Grid.Column="0" Margin="5"/>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ProductoActual.precio, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>

                <Label Content="Existencias:" Grid.Row="2" Grid.Column="0" Margin="5"/>
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding ProductoActual.cantidadExistencias, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>

                <Label Content="Aplica Impuesto:" Grid.Row="3" Grid.Column="0" Margin="5"/>
                <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding ProductoActual.aplicaImpuesto}" VerticalAlignment="Center" Margin="5"/>

                <Label Content="Categoría:" Grid.Row="0" Grid.Column="3" Margin="5"/>
                <ComboBox Grid.Row="0" Grid.Column="4"
                          ItemsSource="{Binding Categorias}"
                          DisplayMemberPath="descripcion"
                          SelectedItem="{Binding SelectedCategoria, Mode=TwoWay}" Margin="5"/>

                <Label Content="Punto Reorden:" Grid.Row="1" Grid.Column="3" Margin="5"/>
                <TextBox Grid.Row="1" Grid.Column="4" Text="{Binding ProductoActual.puntoReorden, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>

                <Label Content="Talla:" Grid.Row="2" Grid.Column="3" Margin="5"/>
                <TextBox Grid.Row="2" Grid.Column="4" Text="{Binding ProductoActual.talla, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
            </Grid>
        </Border>

        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
            <Button Content="Nuevo/Limpiar" Width="100" Margin="5" Style="{StaticResource BaseButtonStyle}" Command="{Binding NuevoProductoCommand}"/>
            <Button Content="Guardar" Width="100" Margin="5" Style="{StaticResource AccentButtonStyle}" Command="{Binding GuardarProductoCommand}"/>
            <Button Content="Eliminar" Width="100" Margin="5" Style="{StaticResource DestructiveButtonStyle}" Command="{Binding EliminarProductoCommand}"/>
        </StackPanel>

    </Grid>
</UserControl>