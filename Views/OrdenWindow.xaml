<UserControl x:Class="LPAC___Proyecto_II_frontend.Views.OrdenWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:LPAC___Proyecto_II_frontend.Views"
             mc:Ignorable="d"
             xmlns:viewModel="clr-namespace:LPAC___Proyecto_II_frontend.ViewModel"
             xmlns:converters="clr-namespace:LPAC___Proyecto_II_frontend.Helpers"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <viewModel:OrdenViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0,0,0,3"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CaretBrush" Value="Black"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CaretBrush" Value="Black"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Grid.Column="0"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}" />
                                                <Path x:Name="Arrow"
                                                      Grid.Column="1"
                                                      Fill="{TemplateBinding Foreground}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                                      Margin="0,0,8,0" />
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              IsHitTestVisible="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                            <Popup x:Name="Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding ActualWidth, ElementName=ToggleButton}">
                                    <ScrollViewer x:Name="ScrollViewer"
                                                  SnapsToDevicePixels="true">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="ScrollViewer" Property="Height" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#D0D0D0"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="true">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#C0C0C0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="#2a2a2a"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="8"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E0E0E0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#D0D0D0"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D0D0D0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#C0C0C0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AccentButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#006BBF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#005A99"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DestructiveButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#D13438"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#D13438"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B2242F"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#9F1C29"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#e0e0e0"/>
            <Setter Property="VerticalGridLinesBrush" Value="#e0e0e0"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#f9f9f9"/>
            <Setter Property="RowHeight" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#f0f0f0"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>

        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e0e0e0"/>
                    <Setter Property="Foreground" Value="#333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" FontSize="16" FontWeight="Bold" Margin="0,0,0,10"><Run Text="Nueva orden de venta"/><LineBreak/><Run/></TextBlock>

        <GroupBox Grid.Row="1" Header="Empresa Cliente" Margin="0,0,0,10">
            <StackPanel>
                <ComboBox Margin="5" ItemsSource="{Binding Clientes}" DisplayMemberPath="NombreCompania" SelectedItem="{Binding ClienteSeleccionado}"  Foreground="Black"/>
                <DatePicker Margin="5" SelectedDate="{Binding FechaOrden}"/>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="2" Header="Detalles de la Orden" Margin="0,0,0,10">
            <Grid>
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding ItemsOrden}"
                          SelectedItem="{Binding ItemOrdenSeleccionado}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Código" Binding="{Binding Producto.idProducto}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Nombre" Binding="{Binding Producto.nombreProducto}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Precio Unitario" Binding="{Binding Producto.precio}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Cantidad" Binding="{Binding Cantidad, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Subtotal" Binding="{Binding Subtotal}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Impuestos" Binding="{Binding Impuestos}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>

        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,0,0,10">
            <ComboBox Margin="5" Width="150" ItemsSource="{Binding ProductosDisponibles}" DisplayMemberPath="nombreProducto" SelectedItem="{Binding ProductoSeleccionado}" Foreground="Black"/>

            <Button Content="Eliminar producto" Margin="5" Style="{StaticResource DestructiveButtonStyle}"
                    Command="{Binding EliminarProductoCommand}"/>
            <Button Content="Añadir producto" Margin="5" Style="{StaticResource AccentButtonStyle}"
                    Command="{Binding AgregarProductoCommand}"/>
        </StackPanel>

        <GroupBox Grid.Row="4" Header="Resumen de la Orden" Margin="0,0,0,10">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Subtotal" Width="100"/>
                    <TextBlock Text="{Binding Subtotal}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Impuestos" Width="100"/>
                    <TextBlock Text="{Binding Impuestos}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Total" Width="100" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Total}" FontWeight="Bold"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>

        <Button Grid.Row="5" Content="Imprimir factura" Command="{Binding GenerarFacturaCommand}" Style="{StaticResource AccentButtonStyle}"/>

    </Grid>
</UserControl>